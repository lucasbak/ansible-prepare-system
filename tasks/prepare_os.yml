- name: Install Python2
  package: 
    name: python2
  when: install_python2 and ((system_major_distribution == "redhat" and ansible_distribution_major_version < '9' ) or system_major_distribution== 'Ubuntu')

- name: "ROLE[prepare-system] - ACTION[prepare-os] - Python3 [redhat7]"
  package:
    state: present
    name: "{{item}}"
    use: yum
  with_items: 
    - python2
    - python3
    - libselinux-python3
    - python3-dnf
  when: ansible_distribution_major_version == 7 and ansible_distribution != "Ubuntu"

- name: "ROLE[prepare-system] - ACTION[prepare-os] - Python3 [redhat8/9]"
  package:
    state: present
    name: "{{item}}"
  with_items: 
    - python3
    - libselinux-python3
    - python3-dnf
  when: (ansible_distribution_major_version|int) >= 8 and ansible_distribution != "Ubuntu"

- name: get status SELinux
  command : getenforce
  register: selinux_status
  when: ansible_distribution != "Ubuntu"

- debug:
    msg: "{{selinux_status}}"

- name: Disable SELinux
  selinux: state=disabled
  when: selinux_status.skip_reason is not defined
  register: disable_selinux

- name: Get grub config status
  stat:
    path: /etc/default/grub
  register: grub_stat

- name: Backup grub config
  copy:
    src: /etc/default/grub
    dest: /etc/default/grub.bak
    remote_src: yes
  when: grub_stat.stat.exists

- name: Disable IPv6 in grub
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="ipv6.disable=1"'
    backrefs: yes
  register: grub_changed
  when: disable_ipv6

- name: Update grub
  command: grub2-mkconfig -o /boot/grub2/grub.cfg
  when: grub_changed is defined and grub_changed.changed

- name: Reboot
  reboot:
  when: disable_selinux.reboot_required and disable_selinux.reboot_required is defined or (grub_changed is defined and grub_changed.changed)
  ignore_errors: True

## THP Settings

- name: get THP Enabled
  shell: cat /sys/kernel/mm/transparent_hugepage/enabled | egrep -o '(\[always\])|(\[madvise\])|(\[never\])|(\[defer\])'
  register: thp_enabled
  ignore_errors: True

- name: get THP Defrag
  shell: cat /sys/kernel/mm/transparent_hugepage/defrag | egrep -o '(\[always\])|(\[madvise\])|(\[never\])|(\[defer\])'
  register: defrag_enabled
  ignore_errors: True


# - name: Disable THP
#   shell: >
#     echo never > /sys/kernel/mm/transparent_hugepage/enabled
#     echo never > /sys/kernel/mm/transparent_hugepage/defrag
#   when: (thp_enabled.stdout == '[always]') or (thp_enabled.stdout == '[msadvise]') or (thp_enabled.stdout == '[defer]')

# - name: Disable Defrag
#   shell: >
#     echo never > /sys/kernel/mm/transparent_hugepage/defrag
#   when: (defrag_enabled.stdout == '[always]') or (defrag_enabled.stdout == '[msadvise]') or (defrag_enabled.stdout == '[defer]')


# Kernel Settings

- name: Sysctl 
  copy:
    src: templates/limits.conf.j2
    dest: /etc/limits/default.conf
  when: limits

- name: Sysctl 
  copy:
    src: templates/kernel-custom.conf.j2
    dest: /etc/sysctl.d/kernel-custom.conf
  register: copy_sysctl

- name: pass kernel option
  shell: sysctl -p /etc/sysctl.d/kernel-custom.conf

- name: Add umask
  lineinfile:
    path: /etc/profile
    line: "umask 0022"

- pam_limits:
    domain: '*'
    limit_type: '-'
    limit_item: nofile
    value: 32768

- pam_limits:
    domain: '*'
    limit_type: '-'
    limit_item: nproc
    value: 65536
# - name: Disable firewalld
#   service: name=firewalld state=stopped enabled=no
#   when: do_firewalld and ansible_distribution != "Ubuntu"

- sysctl:
    name: vm.swappiness
    value: 0
    sysctl_set: yes
    state: present
    reload: yes

- sysctl:
    name: vm.overcommit_memory
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- sysctl:
    name: net.core.somaxconn
    value: 1024
    sysctl_set: yes
    state: present
    reload: yes

# - sysctl:
#     name: net.ipv6.conf.lo.disable_ipv6
#     value: 0
#     sysctl_set: yes
#     state: present
#     reload: yes

# - sysctl:
#     name: net.ipv4.ip_local_port_range
#     value: 10000 65000
#     sysctl_set: yes
#     state: present
#     reload: yes

# - sysctl:
#     name: net.ipv6.conf.all.disable_ipv6
#     value: 1
#     sysctl_set: yes
#     state: present
#     reload: yes

# - sysctl:
#     name: net.ipv6.conf.default.disable_ipv6
#     value: 1
#     sysctl_set: yes
#     state: present
#     reload: yes

# Network settings

- name: Remove 127.0.0.1 "hostname" from /etc/hosts
  lineinfile:
    dest=/etc/hosts
    regexp='127\.0\.0\.1 {{ inventory_hostname }}'
    state=absent
  when: prepare_os_network

- name: Update /etc/hosts
  lineinfile: dest=/etc/hosts regexp='.*{{item.fqdn}}$' line='{{item.ip}} {{item.fqdn}} {{item.shortname}}' state=present
  with_items: "{{ hostnames }}"
  tags:
    - hosts
  when: prepare_os_network

- name: full fqdn
  shell: "hostnamectl set-hostname {{inventory_hostname}} --static"
  when: prepare_os_network

- name: short fqdn
  shell: 
    cmd: "shortname=`cut -d '.' -f 1 <<< {{inventory_hostname}}`; hostnamectl set-hostname $shortname --transient"
    executable: /bin/bash
  when: prepare_os_network

## Hadoop Group
- name: Add group "hadoop"
  group:
    name: hadoop
    gid: 2400
    state: present
    system: yes

## Security Settings

- name: Keytab dir
  file:
    path: /etc/security/keytabs
    state: directory

- name: ServerKeys dir
  file:
    path: /etc/security/serverKeys
    state: directory

# - name: Disable ssl check for python
#   lineinfile:
#     path: /etc/python/cert-verification.cfg
#     regexp: '^verify='
#     line: 'verify=disable'
#     state: present
